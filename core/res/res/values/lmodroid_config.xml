<?xml version="1.0" encoding="utf-8"?>
<!--
     Copyright (C) 2021 The LibreMobileOS Foundation

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->
<resources>

    <!-- Paths to the libraries that contain device specific key handlers -->
    <string-array name="config_deviceKeyHandlerLibs" translatable="false">
    </string-array>

    <!-- Names of the key handler classes -->
    <string-array name="config_deviceKeyHandlerClasses" translatable="false">
    </string-array>

    <!-- Default value for proximity check on screen wake
     NOTE ! - Enable for devices that have a fast response proximity sensor (ideally < 300ms)-->
    <bool name="config_proximityCheckOnWake">false</bool>
    <integer name="config_proximityCheckTimeout">250</integer>
    <bool name="config_proximityCheckOnWakeEnabledByDefault">false</bool>

    <!-- Whether device has a screen with a higher aspect ratio -->
    <bool name="config_haveHigherAspectRatioScreen">false</bool>

    <!-- Defines the actions shown in advanced reboot submenu -->
    <string-array name="config_restartActionsList">
        <item>restart</item>
        <item>restart_recovery</item>
        <item>restart_bootloader</item>
     </string-array>

   <!-- Whether to cleanup fingerprints upon connection to the daemon and when
         user switches -->
    <bool name="config_cleanupUnusedFingerprints">true</bool>

    <!-- All the capabilities of the LEDs on this device, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following capabilities present:

         // Device has a color adjustable notification light.
         LIGHTS_RGB_NOTIFICATION_LED = 1

         // Device has a color adjustable battery light.
         LIGHTS_RGB_BATTERY_LED = 2

         LIGHTS_MULTIPLE_NOTIFICATION_LED = 4 (deprecated)

         // The notification light has adjustable pulsing capability.
         LIGHTS_PULSATING_LED = 8

         // Device has a multi-segment battery light that is able to
         // use the light brightness value to determine how many
         // segments to show (in order to represent battery level).
         LIGHTS_SEGMENTED_BATTERY_LED = 16

         // The notification light supports HAL adjustable brightness
         // via the alpha channel.
         // Note: if a device notification light supports LIGHTS_RGB_NOTIFICATION_LED
         // then HAL support is not necessary for brightness control.  In this case,
         // brightness support will be provided by lineage-sdk through the scaling of
         // RGB color values.
         LIGHTS_ADJUSTABLE_NOTIFICATION_LED_BRIGHTNESS = 32

         // Device has a battery light.
         LIGHTS_BATTERY_LED = 64

         // The battery light supports HAL adjustable brightness via
         // the alpha channel.
         // Note: if a device battery light supports LIGHTS_RGB_BATTERY_LED then HAL
         // support is not necessary for brightness control.  In this case,
         // brightness support will be provided by lineage-sdk through the scaling of
         // RGB color values.
         LIGHTS_ADJUSTABLE_BATTERY_LED_BRIGHTNESS = 128

         For example, a device with notification and battery lights that supports
         pulsating and RGB control would set this config to 75. -->
    <integer name="config_deviceLightCapabilities">8</integer>

    <!-- The list of components which should be automatically disabled for a specific device.
         Note: this MUST not be used to randomly disable components, ask for approval first! -->
    <string-array name="config_deviceDisabledComponents" translatable="false">
    </string-array>

    <!-- The list of components which should be automatically disabled for all devices. -->
    <string-array name="config_globallyDisabledComponents" translatable="false">
    </string-array>

    <!-- The list of components which should be forced to be enabled. -->
    <string-array name="config_forceEnabledComponents" translatable="false">
    </string-array>

    <!-- Button backlight control. Possible values are:
            0 - Not supported
            1 - Supported, but only on/off mode
            2 - Supported with variable brightness control
    -->
    <integer name="config_deviceSupportsButtonBrightnessControl">0</integer>
    <dimen name="config_buttonBrightnessSettingDefaultFloat">1.0</dimen>

    <!-- Keyboard backlight control. Possible values are:
            0 - Not supported
            1 - Supported, but only on/off mode
            2 - Supported with variable brightness control
    -->
    <integer name="config_deviceSupportsKeyboardBrightnessControl">0</integer>
    <dimen name="config_keyboardBrightnessSettingDefaultFloat">1.0</dimen>

    <!-- Hardware keys present on the device, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following keys present:
             1 - Home
             2 - Back
             4 - Menu
             8 - Assistant (search)
            16 - App switch
            32 - Camera
            64 - Volume rocker
         For example, a device with Home, Back and Menu keys would set this
         config to 7. -->
    <integer name="config_deviceHardwareKeys">64</integer>

    <!-- Hardware keys present on the device with the ability to wake, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following keys present:
             1 - Home
             2 - Back
             4 - Menu
             8 - Assistant (search)
            16 - App switch
            32 - Camera
            64 - Volume rocker
         For example, a device with Home, Back and Menu keys would set this
         config to 7. -->
    <integer name="config_deviceHardwareWakeKeys">64</integer>

    <!-- Control the behavior when the user long presses the back button.
         This needs to match the enums in
         frameworks/base/core/java/com/android/internal/util/libremobileos/hwkeys/DeviceKeysConstants.java.
    -->
    <integer name="config_longPressOnBackBehavior">0</integer>

    <!-- Control the behavior when the user long presses the home button.
         This needs to match the enums in
         frameworks/base/core/java/com/android/internal/util/libremobileos/hwkeys/DeviceKeysConstants.java.
    -->
    <integer name="config_longPressOnHomeBehavior">3</integer>
    <!-- Control the behavior when the user double-taps the home button.
         This needs to match the enums in
         frameworks/base/core/java/com/android/internal/util/libremobileos/hwkeys/DeviceKeysConstants.java.
    -->
    <integer name="config_doubleTapOnHomeBehavior">0</integer>
    <!-- Control the behavior when the user long presses the menu button.
         This needs to match the enums in
         frameworks/base/core/java/com/android/internal/util/libremobileos/hwkeys/DeviceKeysConstants.java.
    -->
    <integer name="config_longPressOnMenuBehavior">2</integer>
    <!-- Control the behavior when the user long presses the app switch button.
         This needs to match the enums in
         frameworks/base/core/java/com/android/internal/util/libremobileos/hwkeys/DeviceKeysConstants.java.
    -->
    <integer name="config_longPressOnAppSwitchBehavior">0</integer>

    <!-- Indicates that the device has Single-stage Camera key
         (without "Focus" state) instead of Dual-stage. -->
    <bool name="config_singleStageCameraKey">false</bool>

</resources>
